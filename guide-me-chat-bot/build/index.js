(()=>{"use strict";var e={d:(t,a)=>{for(var n in a)e.o(a,n)&&!e.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:a[n]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{default:()=>n});const a=require("react"),n=e=>{let{token:t="default",onResponse:n=(e=>{}),server:s="http://localhost:3000",isAdmin:c=!0}=e;const[r,l]=(0,a.useState)([]),[i,m]=(0,a.useState)({}),[o,d]=(0,a.useState)({}),[u,g]=(0,a.useState)(!1),v=(0,a.useRef)(null),p=(0,a.useRef)(null),h=e=>{const a={token:t,message:e},c={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(a)};fetch(s+"/get",c).then((e=>{if(!e.ok)throw new Error("Network response was not ok");return e.json()})).then((e=>{n(e),d(e),m((t=>({...t,received:{message:null==e?void 0:e.message,time:R(new Date)}}))),l((e=>[...e,i]))})).catch((e=>{m((e=>({...e,received:{message:"There was a problem with the fetch operation:",time:R(new Date)}})))}))},R=e=>{let t=e.getHours(),a=e.getMinutes(),n=t>=12?"PM":"AM";return t%=12,t=t||12,a=a<10?"0"+a:a,t+":"+a+" "+n},E=()=>{g(!0)};return u?React.createElement("div",null,React.createElement("div",{className:"guide-me-chat-container"},React.createElement("div",{className:"guide-me-chat-header"},React.createElement("h2",null,"Training Mode"),React.createElement("button",{style:{marginTop:10,backgroundColor:"red"},onClick:()=>{g(!1),m({}),d({})}},"Close Training Mode")),React.createElement("div",{className:"guide-me-chat-messages"},React.createElement("form",{ref:p,onSubmit:e=>{if(e.preventDefault(),"default"===t)return void alert("Please submit a token before train a model!");const a=[{intent:e.target.intent.value,questions:e.target.questions.value.split(","),answers:e.target.answers.value.split(",")}],n={token:t,trainData:a},c={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(n)};fetch(s+"/train",c).then((e=>{if(!e.ok)throw new Error("Network response was not ok");return e.json()})).then((e=>{p.current.reset(),alert("Trained! Submit another or close training mode")})).catch((e=>{alert("Trained Failed ;(! Something went wrong")}))}},React.createElement("input",{type:"text",name:"intent",placeholder:"Enter a category (eg: greeting)",style:{width:"95%"},required:!0}),React.createElement("div",null,React.createElement("textarea",{name:"questions",placeholder:"Type question patterns. Seperate each with a comma (,) - example: hi,hello,how are you",rows:5,cols:40,required:!0})),React.createElement("div",null,React.createElement("textarea",{name:"answers",placeholder:"Type answer patterns. Seperate each with a comma (,) - example: hi,hello,how are you",rows:5,cols:40,required:!0})),React.createElement("div",null,React.createElement("button",{id:"send-button",style:{marginTop:20}},"Submit")))))):React.createElement("div",null,React.createElement("div",{className:"guide-me-chat-container"},React.createElement("div",{className:"guide-me-chat-header"},React.createElement("h2",null,"Guide Me!"),React.createElement("h5",null,"Get Real AI Experience!"),c?React.createElement("div",{className:"guide-me-chat-input",style:{justifyContent:"center"}},React.createElement("button",{onClick:E,id:"send-button",style:{backgroundColor:"green"}},"Train Model")):React.createElement(React.Fragment,null)),React.createElement("div",{className:"guide-me-chat-messages"},React.createElement("div",{className:"guide-me-message received"},React.createElement("div",{className:"guide-me-message-content"},"Hello! How can I help you today?"),React.createElement("div",{className:"guide-me-message-timestamp"},R(new Date))),r.map(((e,t)=>{var a,n,s,c;if(e.sent)return React.createElement("div",{key:t,className:"guide-me-chat-messages",style:{padding:0}},React.createElement("div",{className:"guide-me-message sent"},React.createElement("div",{className:"guide-me-message-content"},null===(a=e.sent)||void 0===a?void 0:a.message),React.createElement("div",{className:"guide-me-message-timestamp"},null===(n=e.sent)||void 0===n?void 0:n.time)),React.createElement("div",{className:"guide-me-message received"},React.createElement("div",{className:"guide-me-message-content"},null===(s=e.received)||void 0===s?void 0:s.message),React.createElement("div",{className:"guide-me-message-timestamp"},null===(c=e.received)||void 0===c?void 0:c.time)))})),i.sent?React.createElement(React.Fragment,null,React.createElement("div",{className:"guide-me-message sent"},React.createElement("div",{className:"guide-me-message-content"},null===(y=i.sent)||void 0===y?void 0:y.message),React.createElement("div",{className:"guide-me-message-timestamp"},null===(f=i.sent)||void 0===f?void 0:f.time)),React.createElement("div",{className:"guide-me-message received"},React.createElement("div",{className:"guide-me-message-content fade-in"},null===(b=i.received)||void 0===b?void 0:b.message),React.createElement("div",{className:"guide-me-message-timestamp"},null===(w=i.received)||void 0===w?void 0:w.time))):React.createElement(React.Fragment,null)),o.trainMe&&c?React.createElement("div",{className:"guide-me-chat-input",style:{justifyContent:"center"}},React.createElement("button",{onClick:E,id:"send-button",style:{backgroundColor:"green"}},"Train Model")):React.createElement("form",{className:"guide-me-chat-input",onSubmit:async e=>{e.preventDefault();const t=e.target["chat-input"].value;m({sent:{message:t,time:R(new Date)},received:{message:"typing...",time:""}}),setTimeout((()=>h(t)),1e3),v.current.reset()},ref:v},React.createElement("input",{type:"text",name:"chat-input",placeholder:"Type a message..."}),React.createElement("button",{id:"send-button"},"Send"))));var y,f,b,w};module.exports=t})();